accountId: "000000000000"
region: us-east-1
taskFamily: myapp-dev-backend
serviceName: myapp-dev-backend
clusterName: myapp-dev

# build and upload to ecr with `ecs-deploy build backend --stage dev`
build:
  - name: backend
    repoName: myapp-backend
    #context: ./test
    #dockerfile: Dockerfile

    environment:
      # used at build time
      BUILD_VAR: legacy-value

    environmentValues:
      - name: BUILD_TIME
        valueFrom: "func:timestamp"
      - name: RELEASE
        valueFrom: "func:release"

# deploy to ecs with `ecs-deploy deploy --stage dev`
taskDefinition:
  - name: default
    template: arn:aws:ssm:::parameter/myapp-dev/backend/task-definition
    containerDefinitions:
      - name: backend
        # name of build above or any other docker path
        image: backend

        environment:
          LEGACY_ENV: a value

        environmentValues:
          - name: buildTime
            valueFrom: "func:timestamp"

        # resolved at task init - avoid using these if possible
        #environment:
        #  STAGE1: dev
        #secrets:
        #  STAGE2: arn:aws:ssm:::parameter/myapp-dev/backend/task-definition

  - name: worker
    template: config:task-definition
    containerDefinitions:
      - name: backend
        image: backend
    accountId: "000000000000"
    region: us-east-1
    taskFamily: myapp-dev-backend
    serviceName: myapp-dev-backend
    clusterName: myapp-dev


# resolved at runtime using `ecs-deploy config backend --stage dev`
configs:
  - name: backend
    destination: ./.config/myapp-dev.backend.yml
    values:

        # resolve the template where the value has a prefix of `<protocol>:`
      - name: "@"
        configFrom: backend.template

        # map many ssm values under a path, @ for root
      #- name: "@"
      #  treeFrom: arn:aws:ssm:::parameter/myapp-dev

        # simple value mapping
      #- name: database__password
      #  valueFrom: arn:aws:ssm:::parameter/myapp-dev/backend/task-definition

      - name: database__host
        valueFrom: env:DATABASE_HOST
  - name: backend-2
    destination: ./.config/myapp-dev.backend-2.yml
    values:

      - name: "@"
        configFrom: backend-2.template

      - name: database__host
        value: "localhost"
